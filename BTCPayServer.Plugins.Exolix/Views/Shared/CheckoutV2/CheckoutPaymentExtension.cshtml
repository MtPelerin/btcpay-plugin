@using BTCPayServer.Plugins.Exolix.Model
@using BTCPayServer.Plugins.Exolix.Services
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq

@inject ExolixPluginService pluginService
@{
    var storeId = ((JObject)JObject.Parse(JsonConvert.SerializeObject(Model)))["StoreId"].Value<string>();
    var settings = await pluginService.GetStoreSettings(storeId);

    if (settings?.Enabled is not true || settings.AcceptedCryptos.Count == 0) return;
    var invoiceId = ((JObject)JObject.Parse(JsonConvert.SerializeObject(Model)))["InvoiceId"].Value<string>();

    var vueModel = new
    {
        acceptedCryptos = settings.AcceptedCryptos,
        availableCryptos = ExolixSettings.AvailableCryptos,
        invoiceId = invoiceId,
        storeId = storeId
    };
}

<style>
    .qr-container {
        text-align: center;
        padding: 1rem;
        background: white;
        border-radius: 0.5rem;
        display: inline-block;
        position: relative;
        margin: 0 auto;
    }

    .qr-container .qr-icon {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 70px;
        height: 70px;
        padding: 5px;
        border-radius: 50%;
        background: white;
    }
</style>


<script src="~/vendor/vue-qrcode/vue-qrcode.min.js" asp-append-version="true"></script>
<script>
    window.exolixData = @Html.Raw(JsonConvert.SerializeObject(vueModel));
</script>
<script src="~/Resources/js/exolixComponent.js"></script>
<template id="exolix-checkout-template">
    <div class="payment-box">
        <div class="mt-3">
            <div class="payment-details">
                <div class="mb-3">
                    <label class="form-label">Select Payment Method:</label>
                    <select class="form-select" v-model="selectedCrypto" :disabled="loading">
                        @foreach (var crypto in settings.AcceptedCryptos)
                        {
                            if (ExolixSettings.AvailableCryptos.TryGetValue(crypto, out var cryptoName))
                            {
                                <option value="@crypto">@cryptoName</option>
                            }
                        }
                    </select>
                </div>
                <div v-if="loading" class="mb-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>

                <div v-if="error" class="alert alert-danger mb-3">
                    {{ error }}
                </div>

                <div v-if="swapData" class="swap-details border rounded p-3 mb-3">

                    <div class="qr-container mb-3" v-if="qrCodeData">
                        <div>
                            <qrcode :value="qrCodeData" :options="qrOptions" tag="div" />
                        </div>
                        <img class="qr-icon" :src="getCryptoIcon(selectedCrypto)" :alt="selectedCrypto" />
                    </div>

                    <div class="mb-2">
                        <strong>Please send this amount</strong>
                        <div class="input-group">
                            <input type="text" class="form-control" readonly :value="formatAmount(swapData.fromAmount)">
                            <input type="text" class="form-control" readonly :value="selectedCrypto">
                            <button class="btn btn-secondary" v-on:click="copyToClipboard(swapData.fromAmount)">
                                Copy
                            </button>
                        </div>
                    </div>
                    <div class="mb-2">
                        <strong>to this Address:</strong>
                        <div class="input-group">
                            <input type="text" class="form-control" readonly :value="swapData.fromAddress">
                            <button class="btn btn-secondary" v-on:click="copyToClipboard(swapData.fromAddress)">
                                Copy
                            </button>
                        </div>
                    </div>
                    <button class="btn btn-primary w-100 mt-2" v-on:click="payInWallet" :disabled="!swapData">
                        <i class="fa fa-external-link-alt"></i>
                        Pay in wallet
                    </button>
                    <br />
                    <div class="form-text">
                        This service is provided by <a href="https://exolix.com?ref=F782BF2EAB748E0419F6CF993005341E" target="_blank">Exolix</a>.<br />
                        Bitcoins will be sent to the merchant as soon as your {{ selectedCrypto }} transaction is confirmed. Please wait.
                    </div>
                </div>

            </div>
        </div>
    </div>
</template>



