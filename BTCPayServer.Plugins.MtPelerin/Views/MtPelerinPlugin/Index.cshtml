@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Plugins.MtPelerin.Views
@using BTCPayServer.Client
@using BTCPayServer.Plugins.MtPelerin.Model
@using BTCPayServer.Services

@inject BTCPayServer.Plugins.MtPelerin.Services.MtPelerinPluginService MtPelerinPluginService
@inject DisplayFormatter DisplayFormatter

@model BTCPayServer.Plugins.MtPelerin.Model.MtPelerinModel
@{
    ViewData.SetActivePage(PluginNavPages.Index, "Mt Pelerin plugin");
}


<table><tr>
        <td>
            <a href="https://www.mtpelerin.com/" target="mtp">
                <img src="/Resources/img/MtPelerin.png" />
            </a>
        </td>
        <td width="20" />
        <td>
            <h2>@ViewData["Title"]</h2>
            <br />
            <p>
                Allows you to forward received funds to MtPelerin, a Swiss offramp provider, and get funds in EUR, CHF or other currencies.
            </p>
        </td>
    </tr></table>
<br />

<partial name="_StatusMessage" />

<div permission="@Policies.CanModifyStoreSettings">
    <br />
    <div class="accordion-item">
        <h2 class="accordion-header" id="additional-htmlheader-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#mtpelerin-config" aria-expanded="@string.IsNullOrEmpty(Model.Settings.ApiKey)" aria-controls="#mtpelerin-config">
                <h4>Configuration</h4>

                <svg role="img" class="icon icon-caret-down">
                    <use href="/img/icon-sprite.svg?v=zHetyUWwEcS2qGEsSu8P6l-mwsFkAqFbknsYrREYYvo#caret-down"></use>
                </svg>

            </button>
        </h2>
        <div id="mtpelerin-config" class="accordion-collapse collapse" aria-labelledby="additional-htmlheader-header" style="">
            <div class="accordion-body">
                <br />
                <form method="post" autocomplete="off">
                    <input asp-for="Settings.StoreId" type="hidden" />
                    <table class="table table-sm mt-0 mx-0">
                        <tr>
                            <td width="100">
                                <label asp-for="Settings.ApiKey" class="form-label"></label>
                            </td>
                            <td width="300" class="border-0 ps-0 align-middle">
                                <input asp-for="Settings.ApiKey" data-fill="port" class="form-control" />
                                <span asp-validation-for="Settings.ApiKey" class="text-danger"></span>
                            </td>
                        </tr>
                        <tr>
                            <td width="100">
                                <label asp-for="Settings.Phone" class="form-label"></label>
                            </td>
                            <td width="300" class="border-0 ps-0 align-middle">
                                <input asp-for="Settings.Phone" data-fill="port" class="form-control" />
                                <span asp-validation-for="Settings.Phone" class="text-danger"></span>
                            </td>
                        </tr>
                        <tr>
                            <td width="100">
                                <label asp-for="Settings.Lang" class="form-label"></label>
                            </td>
                            <td width="300" class="border-0 ps-0 align-middle">
                                <select asp-for="Settings.Lang" class="form-select">
                                    <option value="en">English</option>
                                    <option value="fr">Français</option>
                                    <option value="de">Deutsch</option>
                                    <option value="it">Italiano</option>
                                    <option value="es">Español</option>
                                    <option value="pt">Português</option>
                                </select>
                                <span asp-validation-for="Settings.Lang" class="text-danger"></span>
                            </td>
                        </tr>
                        <tr>
                            <td width="100%" align="center" colspan="4">
                                <br />
                                <button id="SaveButton" type="submit" class="btn btn-primary" value="save" name="Command">Save</button>
                            </td>
                        </tr>
                    </table>
                </form>
            </div>
        </div>
    </div>
</div>

<div permission="@Policies.CanViewStoreSettings">
    <br />
    <h4>Operations</h4>
    <br />
    @if (string.IsNullOrEmpty(Model.Settings.ApiKey))
    {
        <p>
            <i>Mt Pelerin settings not set for this store...</i>
        </p>
    } else
    {
        var walletConfig = await MtPelerinPluginService.GetBalances(Model.Settings.StoreId, $"{Context.Request.Scheme}://{Context.Request.Host}");

        <table class="table table-sm mt-0 mx-0">
            <tr>
                <td>
                    <input id="chkOnchain" name="chkNetwork" value="" type="radio" checked="checked" class="form-check-input mt-0 me-2" onchange="setMtPelerinValues()" />
                </td><td>
                    <h5>On Chain</h5>
                    @if (walletConfig.OnChainEnabled)
                    {
                        <p><b>Balance</b>: @walletConfig.OnChainBalance BTC  ~ @DisplayFormatter.Currency(walletConfig.OnChainFiatBalance, walletConfig.FiatCurrency)</p>
                    }
                    else
                    {
                        <p>On Chain wallet not configured</p>
                    }
                    @if (walletConfig.OnChainBalance == 0)
                    {
                        <p>No bitcoins available for sale</p>
                    }
                </td><td width="20"></td>
                <td>
                    <input id="chkLightning" name="chkNetwork" type="radio" class="form-check-input mt-0 me-2" onchange="setMtPelerinValues()" />
                </td><td>
                    <h5>Lightning</h5>
                    @if (walletConfig.OffChainEnabled)
                    {
                        <p><b>Balance</b>: @walletConfig.OffChainBalance BTC  ~ @DisplayFormatter.Currency(walletConfig.OffChainFiatBalance, walletConfig.FiatCurrency)</p>
                    }
                    else
                    {
                        <p>Lightning not configured</p>
                    }
                    @if (walletConfig.OffChainBalance == 0)
                    {
                        <p>No bitcoins available for sale</p>
                    }
                </td>
            </tr>
        </table>

        <table>
            <td>
                Percent to sale:&nbsp;
                <input id="percentToSend" type="number" min="0" max="100" value="100" onchange="setMtPelerinValues()" />
            </td>
            <td width="25" />
            <td>
                <label id="lblToSendBTC">@walletConfig.OnChainBalance</label>&nbsp; BTC - &nbsp;
                <label id="lblToSendFiat">@((int)walletConfig.OnChainFiatBalance)</label>&nbsp; @walletConfig.FiatCurrency
            </td>
            <td width="25" />
            <td><button id="btSend" class="btn btn-primary" onclick="onMtPelerinSend()">Send to Mt Pelerin</button></td>
        </table>

        <br />
        <div id="frmMtPelerin"></div>

        <script type="text/javascript">
            var OnChainBalance = @walletConfig.OnChainBalance;
            var OffChainBalance = @walletConfig.OffChainBalance;

            function setMtPelerinValues() {
                const lblToSendBTC = document.getElementById('lblToSendBTC');
                const lblToSendFiat = document.getElementById('lblToSendFiat');
                const percentToSend = document.getElementById('percentToSend');
                const percent = parseFloat(percentToSend.value) || 0;
                const isOnChain = document.getElementById('chkOnchain').checked;
                const fiatBalance = isOnChain ? @walletConfig.OnChainFiatBalance : @walletConfig.OffChainFiatBalance;
                const btcBalance = isOnChain ? @walletConfig.OnChainBalance : @walletConfig.OffChainBalance;

                lblToSendBTC.textContent = ((percent * btcBalance) / 100).toFixed(8);
                lblToSendFiat.textContent = Math.round((percent * fiatBalance) / 100);
            }

            function onMtPelerinSend() {
                const percentToSend = document.getElementById('percentToSend');
                const chkOnchain = document.getElementById('chkOnchain');
                const frmMtPelerin = document.getElementById('frmMtPelerin');

                if (!percentToSend || !chkOnchain || !frmMtPelerin) return;

                const percent = parseFloat(percentToSend.value) || 0;
                const isOnChain = chkOnchain.checked;
                const balance = isOnChain ? OnChainBalance : OffChainBalance;
                const amountToSend = (percent * balance) / 100;

                if (amountToSend <= 0) return;

                const sNet = isOnChain ? 'bitcoin' : 'lightning';
                const iframeUrl = new URL('https://widget.mtpelerin.com/');

                iframeUrl.searchParams.append('_ctkn', '@Model.Settings.ApiKey');
                iframeUrl.searchParams.append('lang', '@Model.Settings.Lang');
                iframeUrl.searchParams.append('phone', '@Model.Settings.PhoneInt');
                iframeUrl.searchParams.append('snet', `${sNet}_mainnet`);
                iframeUrl.searchParams.append('tabs', 'sell,swap');
                iframeUrl.searchParams.append('tab', 'sell');
                iframeUrl.searchParams.append('ssc', 'btc');
                iframeUrl.searchParams.append('sdc', '@walletConfig.FiatCurrency');
                iframeUrl.searchParams.append('ssa', amountToSend.toString());

                const iframe = `<iframe
                    allow="usb; ethereum; clipboard-write; payment; microphone; camera"
                    loading="lazy"
                    title="Mt Pelerin exchange widget"
                    height="630"
                    style="width:100%"
                    src="${iframeUrl.toString()}"
                ></iframe>`;

                frmMtPelerin.innerHTML = iframe;
            }
        </script>
    }
</div>
